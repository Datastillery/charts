# todo: should these be in chart level values? 
#   do all charts list all the values they need?
#   could we describe why we're defining global at the chart
#   level.
global:
  aws:
    region: us-west-2
    bucket: "master-chart-hosted-dataset-files"
  kafka:
    brokers: pipeline-kafka-bootstrap:9092
  presto:
    url: http://platform-kubernetes-data-platform-presto:8080
  redis:
    host: redis.external-services
    password: ""
  vault:
    endpoint: vault.vault:8200
  ingress:
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-TLS-1-2-2017-01"
      alb.ingress.kubernetes.io/healthcheck-path: /healthcheck
      alb.ingress.kubernetes.io/scheme: "internal"
      alb.ingress.kubernetes.io/subnets: ""
      alb.ingress.kubernetes.io/security-groups: ""
      alb.ingress.kubernetes.io/certificate-arn: ""
      alb.ingress.kubernetes.io/tags: scos.delete.on.teardown=true
      alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
      alb.ingress.kubernetes.io/actions.redirect: '{"Type": "redirect", "RedirectConfig":{"Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
      alb.ingress.kubernetes.io/wafv2-acl-arn: ""
    dnsZone: ""
    rootDnsZone: ""
    port: 80

replicaCount: 3

ingress:
  annotations:

service:
  name: discovery-api
  type: NodePort
  port: 80
  auth_string: ""

image:
  name: smartcitiesdata/discovery_api
  tag: development
  pullPolicy: IfNotPresent

monitoring:
  targetPort: 9002

nodeSelector: {}
tolerations: []
affinity: {}

presto:
  catalog: "hive"
  schema: "default"

ldap:
  host: "iam-master.alm.sandbox.internal.smartcolumbusos.com"
  base: "cn=accounts,dc=sandbox,dc=internal,dc=smartcolumbusos,dc=com"
  user: "sandbox"
  account:
    subdn: "cn=users,cn=accounts"

s3:
  hostedFileBucket: "hosted-dataset-files"
  hostedFileRegion: "us-west-2"

vault:
  endpoint: vault.vault:8200

postgres:
  host: "example.com"
  port: "5432"
  dbname: "postgres"
  user: "postgres"
  password: "password"

elasticsearch:
  host: "es.example.com"

auth:
  domain: "example.com"
  client_id: "1234"
  redirect_base_url: "http://localhost"
  jwks_endpoint: "https://example.com/.well-known/jwks.json"
  jwt_issuer: "https://example.com/"
  user_info_endpoint: "https://example.com/userinfo"

secrets:
    discoveryApiPresignKey: ""
