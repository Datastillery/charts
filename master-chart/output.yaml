---
# Source: master-chart/charts/forklift/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: forklift
---
# Source: master-chart/charts/odo/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: odo
---
# Source: master-chart/charts/reaper/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: reaper
---
# Source: master-chart/charts/valkyrie/templates/cluster-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: valkyrie
---
# Source: master-chart/charts/forklift/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: forklift
rules:
  - apiGroups: [""]
    resources:
      - endpoints
    verbs:
      - get
      - watch
      - list
---
# Source: master-chart/charts/odo/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: odo
rules:
  - apiGroups: [""]
    resources:
      - endpoints
    verbs:
      - get
      - watch
      - list
---
# Source: master-chart/charts/reaper/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: reaper
rules:
  - apiGroups: [""]
    resources:
      - endpoints
    verbs:
      - get
      - watch
      - list
---
# Source: master-chart/charts/valkyrie/templates/cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: valkyrie
rules:
  - apiGroups: [""]
    resources:
      - endpoints
    verbs:
      - get
      - watch
      - list
---
# Source: master-chart/charts/forklift/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: forklift
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: forklift
subjects:
- kind: ServiceAccount
  name: forklift
  namespace: default
---
# Source: master-chart/charts/odo/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: odo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: odo
subjects:
- kind: ServiceAccount
  name: odo
  namespace: default
---
# Source: master-chart/charts/reaper/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: reaper
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: reaper
subjects:
- kind: ServiceAccount
  name: reaper
  namespace: default
---
# Source: master-chart/charts/valkyrie/templates/cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: valkyrie
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: valkyrie
subjects:
- kind: ServiceAccount
  name: valkyrie
  namespace: default
---
# Source: master-chart/charts/forklift/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: forklift
  namespace: default
  labels:
    app.kubernetes.io/name: forklift
  annotations:
    prometheus.io/port:  "9002"
    prometheus.io/scrape: "true"
spec:
  selector:
    app.kubernetes.io/name: forklift
  ports:
  - name: erlang-vm
    protocol: TCP
    port: 9001
    targetPort: 9001
  - name: epmd
    protocol: TCP
    port: 4369
    targetPort: 4369
  type: ClusterIP
---
# Source: master-chart/charts/odo/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: odo
  namespace: default
  labels:
    app.kubernetes.io/name: odo
  annotations:
    prometheus.io/port:  "9002"
    prometheus.io/scrape: "true"
spec:
  selector:
    app.kubernetes.io/name: odo
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4000
  type: NodePort
---
# Source: master-chart/charts/reaper/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: reaper
  namespace: default
  labels:
    app.kubernetes.io/name: reaper
  annotations:
    prometheus.io/port: "9002"
    prometheus.io/scrape: "true"
spec:
  selector:
    app.kubernetes.io/name: reaper
  ports:
  - name: metrics
    protocol: TCP
    port: 9092
    targetPort: reaper
  - name: erlang-vm
    protocol: TCP
    port: 9001
    targetPort: 9001
  - name: epmd
    protocol: TCP
    port: 4369
    targetPort: 4369
  type: ClusterIP
---
# Source: master-chart/charts/valkyrie/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: valkyrie
  namespace: default
  labels:
    app.kubernetes.io/name: valkyrie
  annotations:
    prometheus.io/port: "9002"
    prometheus.io/scrape: "true"
spec:
  selector:
    app.kubernetes.io/name: valkyrie
  ports:
  - name: erlang-vm
    protocol: TCP
    port: 9001
    targetPort: 9001
  - name: epmd
    protocol: TCP
    port: 4369
    targetPort: 4369
  type: ClusterIP
---
# Source: master-chart/charts/forklift/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: forklift
  labels:
    app.kubernetes.io/name: forklift
    helm.sh/chart: forklift-2.8.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: forklift
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: forklift
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      serviceAccountName: forklift
      containers:
        - name: forklift
          image: "smartcitiesdata/forklift:development"
          imagePullPolicy: Always
          ports:
          - containerPort: 9001
          - containerPort: 4369
          env:
          - name: KAFKA_BROKERS
            value: streaming-service-kafka-bootstrap:9092
          - name: PRESTO_URL
            value: http://platform-kubernetes-data-platform-presto:8080
          - name: RUN_IN_KUBERNETES
            value: "true"
          - name: REDIS_HOST
            value: 
          - name: REDIS_PASSWORD
            value: 
          - name: DATA_TOPIC_PREFIX
            value: transformed
          - name: OUTPUT_TOPIC
            value: streaming-persisted
          - name: PRESTO_USER
            value: forklift
          - name: METRICS_PORT
            value: "9002"
          - name: PROFILING_ENABLED
            value: "false"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: NODE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          resources:
            null
---
# Source: master-chart/charts/odo/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: odo
  namespace: default
  labels:
    helm.sh/chart: odo-0.3.0
    app.kubernetes.io/name: odo
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: odo
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: odo
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      serviceAccountName: odo
      containers:
      - name: odo
        image: smartcitiesdata/odo:development
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 300m
            memory: 2Gi
          requests:
            cpu: 300m
            memory: 2Gi
        volumeMounts:
        - mountPath: /downloads
          name: download-dir
        env:
        - name: CLOUD_REGION
          value: us-east-1
        - name: HOSTED_FILE_BUCKET
          value: 
        - name: KAFKA_BROKERS
          value: streaming-service-kafka-bootstrap.streaming-prime:9092
        - name: REDIS_HOST
          value: redis.external-services
        - name: SECRETS_ENDPOINT
          value: http://vault.vault:8200
        - name: WORKING_DIR
          value: 
        - name: METRICS_PORT
          value: "9002"
      volumes:
      - name: download-dir
        emptyDir: {}
---
# Source: master-chart/charts/reaper/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reaper
  namespace: default
  labels:
    helm.sh/chart: reaper-0.3.3
    app.kubernetes.io/name: reaper
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reaper
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: reaper
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      serviceAccountName: reaper
      imagePullSecrets:
      - name: regcred
      containers:
      - name: reaper
        image: smartcitiesdata/reaper:development
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 300m
            ephemeral-storage: 15G
            memory: 1Gi
          requests:
            cpu: 300m
            ephemeral-storage: 15G
            memory: 1Gi
        ports:
        - containerPort: 9001
        - containerPort: 4369
        volumeMounts:
        - mountPath: /downloads
          name: download-dir
        env:
        - name: OUTPUT_TOPIC_PREFIX
          value: raw
        - name: DLQ_TOPIC
          value: streaming-dead-letters
        - name: KAFKA_BROKERS
          value: streaming-service-kafka-bootstrap:9092
        - name: RUN_IN_KUBERNETES
          value: "true"
        - name: REDIS_HOST
          value: redis.external-services
        - name: REDIS_PASSWORD
          value: 
        - name: SECRETS_ENDPOINT
          value: vault.vault:8200
        - name: HOSTED_FILE_BUCKET
          value: 
        - name: AWS_REGION
          value: us-west-2
        - name: PROFILING_ENABLED
          value: "false"
        - name: METRICS_PORT
          value: "9002"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      volumes:
      - name: download-dir
        emptyDir: {}
---
# Source: master-chart/charts/valkyrie/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: valkyrie
  labels:
    app.kubernetes.io/name: valkyrie
    helm.sh/chart: valkyrie-2.6.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: valkyrie
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: valkyrie
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      serviceAccountName: valkyrie
      containers:
        - name: valkyrie
          image: "smartcitiesdata/valkyrie:development"
          imagePullPolicy: Always
          ports:
          - containerPort: 9001
          - containerPort: 4369
          env:
          - name: KAFKA_BROKERS
            value: streaming-service-kafka-bootstrap:9092
          - name: RUN_IN_KUBERNETES
            value: "true"
          - name: INPUT_TOPIC_PREFIX
            value: raw
          - name: OUTPUT_TOPIC_PREFIX
            value: transformed
          - name: DLQ_TOPIC
            value: streaming-dead-letters
          - name: REDIS_HOST
            value: 
          - name: REDIS_PASSWORD
            value: 
          - name: PROCESSOR_STAGES
            value: "1"
          - name: PROFILING_ENABLED
            value: "false"
          - name: METRICS_PORT
            value: "9002"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 512Mi
